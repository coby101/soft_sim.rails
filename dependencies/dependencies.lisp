;;;===========================================================================
;;;
;;;   Code for adding application assets needed
;;;   by generated controllers, views, models etc
;;;
;;;===========================================================================

;;; define and use a dependencies package
(in-package :ror)

(load (merge-pathnames "application_helper.lisp" *load-truename*))
(load (merge-pathnames "javascripts.lisp" *load-truename*))
(load (merge-pathnames "css.lisp" *load-truename*))

(defun write-helpers ()
  ;; for now just application_helper.rb with one function
  ;; link_to_add_fields which is used in nested forms for repeated attributes
  (let ((file (helper-file-path "application_helper")))
    (with-open-file (helper file :direction :output :if-exists :supersede)
      (format-file-notice helper "write-helpers")
      (format helper "~%module ApplicationHelper~%")
      (format helper (link_to_add_fields))
      (format helper (link_with_external_link))
      (format helper (menu-level-methods))
      (format helper "~%end~%"))))

(defun install-javascripts ()
  (prepend-application.js)
  (generated-dependencies.js)
  (install-javascript-packs))


;; write nested form CSS
(defun install-css ()
  (dolist (component *css-components*)
    (let ((file (css-file-path (car component))))
      (with-open-file (css file :direction :output :if-exists :supersede)
        (css:comment-out css "this file was generated by the function install-css~% ~
                             Do not modifiy, your changes will be overwritten")
        (format css "~a" (cadr component))))))

(defun install-dependencies ()
  (write-helpers)
  (install-javascripts)
  (install-css))

;;;===========================================================================
;;; Local variables:
;;; tab-width: 4
;;; indent-tabs-mode: nil
;;; End:
